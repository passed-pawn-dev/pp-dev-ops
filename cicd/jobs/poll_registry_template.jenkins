def projects = [
    'pp-dev-ops': [
        githubApiUrl: 'https://api.github.com/orgs/passed-pawn-dev/packages/container/pp-dev-ops%2Fcharts%2Fpp-app',
        triggeredPipeline: 'pp-dev-ops-cd-pipeline'
    ],
    'pp-backend': [
        githubApiUrl: 'https://api.github.com/orgs/passed-pawn-dev/packages/container/pp-dev-ops%2Fcharts%2Fpp-backend',
        triggeredPipeline: 'pp-backend-cd-pipeline'
    ],
    'pp-frontend': [
        githubApiUrl: 'https://api.github.com/orgs/passed-pawn-dev/packages/container/pp-dev-ops%2Fcharts%2Fpp-frontend',
        triggeredPipeline: 'pp-frontend-cd-pipeline'
    ]
]

projects.each { projectName, config ->
    pipelineJob("${projectName}-poll-registry") {
        definition {
            cpsScm {
                scm {
                    git {
                        remote {
                            url('git@github.com:passed-pawn-dev/pp-dev-ops.git')
                            credentials("pp-dev-ops-ssh")
                        }
                        branch('main')
                    }
                }
                scriptPath('cicd/pipelines/poll_registry.groovy')
            }
        }
        parameters {
            stringParam('PROJECT_NAME', projectName)
            stringParam('GITHUB_API_URL', config.githubApiUrl)
            stringParam('TRIGGERED_PIPELINE', config.triggeredPipeline)
        }
        triggers {
            cron('H/2 * * * *')
        }
    }
}