apiVersion: apps/v1
kind: Deployment
metadata:
  name: pp-api
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app: pp-api
  template:
    metadata:
      labels:
        app: pp-api
    spec:
    {{ if .Values.pullImages }}
      imagePullSecrets:
        - name: pp-github-package-registry-key
    {{ end }}
      containers:
        - name: pp-api
          image: {{ .Values.api.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "400m"
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: pp-api-db-secrets
                  key: db_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pp-api-db-secrets
                  key: db_password
            - name: DB_NAME
              value: {{ .Values.api.db.name }}
            - name: DB_HOST
              value: {{ .Values.api.db.host }}
          volumeMounts:
          - name: appsettings
            mountPath: "/app/config"
          livenessProbe:
            httpGet:
              path: /api/Health/Liveness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 8
          startupProbe:
            httpGet:
              path: /api/Health/Liveness
              port: 8080
            failureThreshold: 30
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /api/Health/Readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
      volumes:
      - name: appsettings
        secret:
          secretName: pp-api-secrets
          items:
          - key: appsettings.json
            path: appsettings.json
