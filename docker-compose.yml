version: '3.9'

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: passedpawn
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
      
  api:
    image: pp-backend
    ports: 
      - 8080:8080
    depends_on: 
      postgres:
        condition: service_healthy
        restart: true

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    ports:
      - 8081:8080
    command: -v start-dev --import-realm
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      DB_VENDOR: postgres
      DB_ADDR: keycloak-postgres
      DB_PORT: ${POSTGRES_DB_PORT}
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    networks:
      - app-network

  keycloak-postgres:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - app-network
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data

networks:
  app-network:

volumes:
  keycloak-db-data:
